#!/bin/bash

# Configuration
# following configuration parameters required:
# DB_BACKUP_AWS_ACCESS_KEY_ID=
# DB_BACKUP_AWS_SECRET_ACCESS_KEY=
# DB_BACKUP_AWS_DEFAULT_REGION=
# DB_BACKUP_TARGET_BUCKET=
# DB_BACKUP_ROOT=
# DB_BACKUP_BASE_NAME=

ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." >/dev/null 2>&1 && pwd )"

if [[ -z "$RAILS_ENV" ]]; then
  RAILS_ENV=development
fi

if [ "$RAILS_ENV" != "production" ]; then
  if [[ -f .env ]]; then
    . ${ROOT_DIR}/.env
  fi

  if [[ -f .env.${RAILS_ENV} ]]; then
    . ${ROOT_DIR}/.env.${RAILS_ENV}
  fi
fi

export AWS_ACCESS_KEY_ID=${DB_BACKUP_AWS_ACCESS_KEY_ID}
export AWS_SECRET_ACCESS_KEY=${DB_BACKUP_AWS_SECRET_ACCESS_KEY}
export AWS_DEFAULT_REGION=${DB_BACKUP_AWS_DEFAULT_REGION}

while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -rf|---remote-file)
      REMOTE_FILE=$2
      shift 2
      ;;
    -rf=*|---remote-file=*)
      REMOTE_FILE="${1#*=}"
      shift 1
      ;;
    *)
      shift
      ;;
  esac
done

if [[ -z "$REMOTE_FILE" ]]; then
  REMOTE_FILE=$($ROOT_DIR/bin/db_ls_backups | grep -v next | tail -n 1 | awk '{ print $1; }')
fi

aws s3 presign \
  s3://${DB_BACKUP_TARGET_BUCKET}/${REMOTE_FILE} \
  --expires-in 300
