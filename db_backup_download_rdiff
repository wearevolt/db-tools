#!/bin/bash

## Peform setup
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
. ${SCRIPT_DIR}/db_backup_setup


## Process params
while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -dd|--dumps-dir)
      DB_BACKUP_DUMPS_DIR=$2
      shift 2
      ;;
    -dd=*|--dumps-dir=*)
      DB_BACKUP_DUMPS_DIR="${1#*=}"
      shift 1
      ;;

    -rf|--remote-file)
      REMOTE_FILE=$2
      shift 2
      ;;
    -rf=*|--remote-file=*)
      REMOTE_FILE="${1#*=}"
      shift 1
      ;;

    -lf|--local-file)
      LOCAL_FILE=$2
      shift 2
      ;;
    -lf=*|--local-file=*)
      LOCAL_FILE="${1#*=}"
      shift 1
      ;;

    *)
      shift 1
      ;;
  esac
done

if [[ -n "$LOCAL_FILE" ]]; then
  DB_BACKUP_DUMPS_DIR=$(dirname $LOCAL_FILE)
fi

if [[ -z "$DB_BACKUP_DUMPS_DIR" ]]; then
  DB_BACKUP_DUMPS_DIR=$TMP_DIR/dumps
fi


if [[ -z "$REMOTE_FILE"  ]]; then
  echo "--remote-file param required" >&2
  exit 1
fi

if [[ -z "$LOCAL_FILE"  ]]; then
  LOCAL_FILE=$DB_BACKUP_DUMPS_DIR/$(basename $REMOTE_FILE)
fi

mkdir -p $DB_BACKUP_DUMPS_DIR

S3_FILE_PATH=s3://$DB_BACKUP_TARGET_BUCKET/$REMOTE_FILE

aws s3 sync --size-only "$S3_FILE_PATH" "$LOCAL_FILE"

# 3. Remove old line markers
if [[ -d ${LOCAL_FILE}/rdiff-backup-data ]]; then
  echo "Removing old head markers"

  FILES_TO_REMOVE=$(ls ${LOCAL_FILE}/rdiff-backup-data/current_mirror* -1 | sort | head -n -1)
  echo "Removing $FILES_TO_REMOVE"
  if [[ -n "$FILES_TO_REMOVE" ]]; then
    rm $FILES_TO_REMOVE
  fi

  FILES_TO_REMOVE=$(ls ${LOCAL_FILE}/rdiff-backup-data/mirror_metadata*snapshot.gz  -1 | sort | head -n -1)
  echo "Removing $FILES_TO_REMOVE"
  if [[ -n "$FILES_TO_REMOVE" ]]; then
    rm $FILES_TO_REMOVE
  fi
fi

echo "Backup downloaded to $LOCAL_FILE"


