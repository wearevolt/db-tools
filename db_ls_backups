#!/bin/bash

set -e

# Configuration
# following configuration parameters required:
# DB_BACKUP_AWS_ACCESS_KEY_ID=
# DB_BACKUP_AWS_SECRET_ACCESS_KEY=
# DB_BACKUP_AWS_DEFAULT_REGION=
# DB_BACKUP_TARGET_BUCKET=
# DB_BACKUP_ROOT=
# DB_BACKUP_BASE_NAME=


ROOT_DIR="$( git rev-parse --show-toplevel 2>/dev/null || echo '')"

if [[ -z $ROOT_DIR ]]; then
  TMP_DIR=$ROOT_DIR/tmp
else
  TMP_DIR=/tmp
fi

if [[ -z "$RAILS_ENV" ]]; then
  RAILS_ENV=development
fi

if [ "$RAILS_ENV" != "production" ]; then
  if [[ -f ${ROOT_DIR}/.env ]]; then
    . ${ROOT_DIR}/.env
  fi

  if [[ -f ${ROOT_DIR}/.env.${RAILS_ENV} ]]; then
    . ${ROOT_DIR}/.env.${RAILS_ENV}
  fi

  if [[ -f ${ROOT_DIR}/.env.db_tools ]]; then
    . ${ROOT_DIR}/.env.db_tools
  fi
fi

export AWS_ACCESS_KEY_ID=${DB_BACKUP_AWS_ACCESS_KEY_ID}
export AWS_SECRET_ACCESS_KEY=${DB_BACKUP_AWS_SECRET_ACCESS_KEY}
export AWS_DEFAULT_REGION=${DB_BACKUP_AWS_DEFAULT_REGION}

LEFT_BOUNDARY="00:00 yesterday UTC"
RIGHT_BOUNDARY="00:00 tomorrow UTC"

NEXT_PAGE_TOKEN=

while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -p|--prefix)
      BACKUP_PREFIX=$2
      shift 2
      ;;
    -p=*|--prefix=*)
      BACKUP_PREFIX="${1#*=}"
      shift 1
      ;;

    # -l|--left-bound)
    #   LEFT_BOUNDARY=$2
    #   shift 2
    #   ;;
    # -l=*|--left-bound=*)
    #   LEFT_BOUNDARY="${1#*=}"
    #   shift 1
    #   ;;

    # -r|--right-boundary)
    #   RIGHT_BOUNDARY=$2
    #   shift 2
    #   ;;
    # -r=*|--right-boundary=*)
    #   RIGHT_BOUNDARY="${1#*=}"
    #   shift 1
    #   ;;

    -d|--day)
      DAY="$2"
      LEFT_BOUNDARY="$DAY"
      RIGHT_BOUNDARY="$DAY + 1 day"
      shift 2
      ;;
    -d=*|--day=*)
      DAY="${1#*=}"
      LEFT_BOUNDARY="$DAY"
      RIGHT_BOUNDARY="$DAY + 1 day"
      shift 1
      ;;

    -np|--next-page)
      NEXT_PAGE_TOKEN="$2"
      shift 2
      ;;
    -np=*|--next-page=*)
      NEXT_PAGE_TOKEN="${1#*=}"
      shift 1
      ;;

    *)
      shift
      ;;
  esac
done

# LEFT_BOUNDARY=$(date +'%Y-%m-%d' --utc --date="${LEFT_BOUNDARY}")
# RIGHT_BOUNDARY=$(date +'%Y-%m-%d' --utc --date="${RIGHT_BOUNDARY}")

if [[ ! -z "$NEXT_PAGE_TOKEN" ]]; then
  NEXT_PAGE="--starting-token=$NEXT_PAGE_TOKEN"
else
  NEXT_PAGE=""
fi


aws s3api list-objects-v2 --bucket=${DB_BACKUP_TARGET_BUCKET} \
  --prefix=${BACKUP_PREFIX} \
  --max-items=500 \
  $NEXT_PAGE \
  --query="{ Contents: Contents, NextToken: NextToken }" \
  | jq -c -r "(.Contents | map(.Key + \" \" + (.Size/1024/1024|floor|tostring)+\"M\") | join(\"\n\")) + \"\nnext \" + .NextToken" \
  | grep -v -E '^next\s+$'