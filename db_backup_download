#!/bin/bash

# Configuration
# following configuration parameters required:
# DB_BACKUP_AWS_ACCESS_KEY_ID=
# DB_BACKUP_AWS_SECRET_ACCESS_KEY=
# DB_BACKUP_AWS_DEFAULT_REGION=
# DB_BACKUP_TARGET_BUCKET=
# DB_BACKUP_ROOT=
# DB_BACKUP_BASE_NAME=

ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." >/dev/null 2>&1 && pwd )"

if [[ -z "$RAILS_ENV" ]]; then
  RAILS_ENV=development
fi

if [ "$RAILS_ENV" != "production" ]; then
  if [[ -f .env ]]; then
    . ${ROOT_DIR}/.env
  fi

  if [[ -f .env.${RAILS_ENV} ]]; then
    . ${ROOT_DIR}/.env.${RAILS_ENV}
  fi
fi

export AWS_ACCESS_KEY_ID=${DB_BACKUP_AWS_ACCESS_KEY_ID}
export AWS_SECRET_ACCESS_KEY=${DB_BACKUP_AWS_SECRET_ACCESS_KEY}
export AWS_DEFAULT_REGION=${DB_BACKUP_AWS_DEFAULT_REGION}


while [[ $# -gt 0 ]]
do
  key="$1"

  case $key in
    -dd|--dumps-dir)
      DUMPS_DIR=$2
      shift 2
      ;;
    -dd=*|--dumps-dir=*)
      DUMPS_DIR="${1#*=}"
      shift 1
      ;;

    -rf|--remote-file)
      REMOTE_FILE=$2
      shift 2
      ;;
    -rf=*|--remote-file=*)
      REMOTE_FILE="${1#*=}"
      shift 1
      ;;

    --url|--signed-url)
      REMOTE_SIGNED_URL=$2
      shift 2
      ;;
    --url=*|--signed-url=*)
      REMOTE_SIGNED_URL="${1#*=}"
      shift 1
      ;;

    -lf|--local-file)
      LOCAL_FILE=$2
      shift 2
      ;;
    -lf=*|--local-file=*)
      LOCAL_FILE="${1#*=}"
      shift 1
      ;;

    *)
      shift 1
      ;;
  esac
done

if [[ ! -z "$LOCAL_FILE" ]]; then
  DUMPS_DIR=$(dirname $LOCAL_FILE)
fi

if [[ -z "$DUMPS_DIR" ]]; then
  DUMPS_DIR=${ROOT_DIR}/tmp/dumps
fi


if [[ ( -z "$REMOTE_FILE" ) && ( ! -z "$REMOTE_SIGNED_URL" ) ]]; then
  REMOTE_FILE=$($ROOT_DIR/bin/db_ls_backups | grep -v next | tail -n 1 | awk '{ print $1; }')
fi

if [[ -z "$LOCAL_FILE" ]]; then
  if [[ ! -z "$REMOTE_SIGNED_URL" ]]; then
    LOCAL_FILE=$DUMPS_DIR/$(basename $REMOTE_SIGNED_URL | cut -d? -f1)
  else
    LOCAL_FILE=$DUMPS_DIR/$(basename $REMOTE_FILE)
  fi
fi

mkdir -p $DUMPS_DIR

if [[ -z $REMOTE_SIGNED_URL ]]; then
  S3_FILE_PATH=s3://$DB_BACKUP_TARGET_BUCKET/$REMOTE_FILE

  aws s3 cp "$S3_FILE_PATH" "$LOCAL_FILE" --only-show-errors
else
  wget "$REMOTE_SIGNED_URL" -O "$LOCAL_FILE"
fi

echo "$LOCAL_FILE"